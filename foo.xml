<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
    <hashTree>
        <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
            <stringProp name="TestPlan.comments"></stringProp>
            <boolProp name="TestPlan.functional_mode">false</boolProp>
            <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
            <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel"
                         testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="TestPlan.user_define_classpath"></stringProp>
        </TestPlan>
        <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
            </Arguments>
            <hashTree/>
            <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults"
                               enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel"
                             testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">simplerisk.local</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path"></stringProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </ConfigTestElement>
            <hashTree/>
            <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager"
                           enabled="true">
                <collectionProp name="CookieManager.cookies"/>
                <boolProp name="CookieManager.clearEachIteration">false</boolProp>
            </CookieManager>
            <hashTree/>
            <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
                <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
                <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel"
                             testclass="LoopController" testname="Loop Controller" enabled="true">
                    <boolProp name="LoopController.continue_forever">false</boolProp>
                    <stringProp name="LoopController.loops">1</stringProp>
                </elementProp>
                <stringProp name="ThreadGroup.num_threads">2</stringProp>
                <stringProp name="ThreadGroup.ramp_time">1</stringProp>
                <longProp name="ThreadGroup.start_time">1370726934000</longProp>
                <longProp name="ThreadGroup.end_time">1370726934000</longProp>
                <boolProp name="ThreadGroup.scheduler">false</boolProp>
                <stringProp name="ThreadGroup.duration"></stringProp>
                <stringProp name="ThreadGroup.delay"></stringProp>
            </ThreadGroup>
            <hashTree>
                <RecordingController guiclass="RecordController" testclass="RecordingController"
                                     testname="Recording Controller" enabled="false"/>
                <hashTree/>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                       testname="Submit Risk" enabled="false">
                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                    <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="Open Login Page" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6 /"
                                          enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:59.0) Gecko/20100101 Firefox/59.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer"
                                           testname="Constant Timer" enabled="true">
                                <stringProp name="ConstantTimer.delay">${waittime}</stringProp>
                            </ConstantTimer>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="Login" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="69 /"
                                          enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                    <elementProp name="user" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">user</stringProp>
                                        <stringProp name="Argument.value">${uname}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="pass" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                                        <stringProp name="Argument.name">pass</stringProp>
                                        <stringProp name="Argument.value">${pwrd}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="submit" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">submit</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">/</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:59.0) Gecko/20100101 Firefox/59.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="76 /reports/" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/reports/</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:59.0) Gecko/20100101 Firefox/59.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer"
                                           testname="Constant Timer" enabled="true">
                                <stringProp name="ConstantTimer.delay">${waittime}</stringProp>
                            </ConstantTimer>
                            <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="75 /reports" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/reports</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:59.0) Gecko/20100101 Firefox/59.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters"
                                        testname="User Parameters" enabled="true">
                            <collectionProp name="UserParameters.names">
                                <stringProp name="111425664">uname</stringProp>
                                <stringProp name="3454585">pwrd</stringProp>
                            </collectionProp>
                            <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-2129969037">
                                    <stringProp name="-1879145925">student</stringProp>
                                    <stringProp name="-1689469458">S@feB3ar</stringProp>
                                </collectionProp>
                            </collectionProp>
                            <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="Open Risk Management Menu" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="95 Open Risk Management Menu" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/management/index.php</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/reports/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:59.0) Gecko/20100101 Firefox/59.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor"
                                        testname="Regular Expression Extractor" enabled="true">
                            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                            <stringProp name="RegexExtractor.refname">csrf</stringProp>
                            <stringProp name="RegexExtractor.regex">csrf_magic&apos; value=&quot;(.*)&quot;</stringProp>
                            <stringProp name="RegexExtractor.template">$1$</stringProp>
                            <stringProp name="RegexExtractor.default"></stringProp>
                            <stringProp name="RegexExtractor.match_number">1</stringProp>
                        </RegexExtractor>
                        <hashTree/>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="Submit risk with attachmnet" enabled="false">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="133 Submit risk with attachmnet" enabled="true">
                            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                                <collectionProp name="HTTPFileArgs.files">
                                    <elementProp name="C:\Users\CCA_Student\Documents\safebear\testriskfile.txt"
                                                 elementType="HTTPFileArg">
                                        <stringProp name="File.path">
                                            C:\Users\CCA_Student\Documents\safebear\testriskfile.txt
                                        </stringProp>
                                        <stringProp name="File.paramname">file[]</stringProp>
                                        <stringProp name="File.mimetype">text/plain</stringProp>
                                    </elementProp>
                                    <elementProp name="C:\Users\CCA_Student\Documents\safebear\testriskfile.txt"
                                                 elementType="HTTPFileArg">
                                        <stringProp name="File.path">
                                            C:\Users\CCA_Student\Documents\safebear\testriskfile.txt
                                        </stringProp>
                                        <stringProp name="File.paramname">file[0]</stringProp>
                                        <stringProp name="File.mimetype">text/plain</stringProp>
                                    </elementProp>
                                </collectionProp>
                            </elementProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                    <elementProp name="__csrf_magic" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">__csrf_magic</stringProp>
                                        <stringProp name="Argument.value">${csrf}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="subject" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">subject</stringProp>
                                        <stringProp name="Argument.value">Test risk 1</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="category" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">category</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="location" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">location</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="reference_id" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">reference_id</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="regulation" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">regulation</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="control_number" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">control_number</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="assets" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">assets</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="technology" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">technology</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="team" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">team</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="owner" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">owner</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="manager" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">manager</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="source" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">source</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="scoring_method" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">scoring_method</stringProp>
                                        <stringProp name="Argument.value">1</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="likelihood" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">likelihood</stringProp>
                                        <stringProp name="Argument.value">3</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="impact" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">impact</stringProp>
                                        <stringProp name="Argument.value">3</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="AccessVector" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">AccessVector</stringProp>
                                        <stringProp name="Argument.value">N</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="AccessComplexity" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">AccessComplexity</stringProp>
                                        <stringProp name="Argument.value">L</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="Authentication" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">Authentication</stringProp>
                                        <stringProp name="Argument.value">N</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="ConfImpact" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">ConfImpact</stringProp>
                                        <stringProp name="Argument.value">C</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="IntegImpact" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">IntegImpact</stringProp>
                                        <stringProp name="Argument.value">C</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="AvailImpact" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">AvailImpact</stringProp>
                                        <stringProp name="Argument.value">C</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="Exploitability" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">Exploitability</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="RemediationLevel" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">RemediationLevel</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="ReportConfidence" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">ReportConfidence</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="CollateralDamagePotential" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">CollateralDamagePotential</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="TargetDistribution" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">TargetDistribution</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="ConfidentialityRequirement" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">ConfidentialityRequirement</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="IntegrityRequirement" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">IntegrityRequirement</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="AvailabilityRequirement" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">AvailabilityRequirement</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="DREADDamage" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">DREADDamage</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="DREADReproducibility" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">DREADReproducibility</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="DREADExploitability" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">DREADExploitability</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="DREADAffectedUsers" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">DREADAffectedUsers</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="DREADDiscoverability" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">DREADDiscoverability</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPSkillLevel" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPSkillLevel</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPMotive" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPMotive</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPOpportunity" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPOpportunity</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPSize" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPSize</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPEaseOfDiscovery" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPEaseOfDiscovery</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPEaseOfExploit" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPEaseOfExploit</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPAwareness" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPAwareness</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPIntrusionDetection" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPIntrusionDetection</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPLossOfConfidentiality" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPLossOfConfidentiality</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPLossOfIntegrity" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPLossOfIntegrity</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPLossOfAvailability" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPLossOfAvailability</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPLossOfAccountability" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPLossOfAccountability</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPFinancialDamage" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPFinancialDamage</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPReputationDamage" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPReputationDamage</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPNonCompliance" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPNonCompliance</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPPrivacyViolation" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPPrivacyViolation</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="Custom" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">Custom</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="assessment" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">assessment</stringProp>
                                        <stringProp name="Argument.value">Bad performance</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="notes" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">notes</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">/management/index.php</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/management/index.php
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="X-Requested-With" elementType="Header">
                                        <stringProp name="Header.name">X-Requested-With</stringProp>
                                        <stringProp name="Header.value">XMLHttpRequest</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:59.0) Gecko/20100101 Firefox/59.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">*/*</stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="Submit risk without attachmnet" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="145 Submit risk without attachmnet" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                    <elementProp name="__csrf_magic" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">__csrf_magic</stringProp>
                                        <stringProp name="Argument.value">${csrf}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="subject" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">subject</stringProp>
                                        <stringProp name="Argument.value">Test risk 1</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="category" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">category</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="location" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">location</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="reference_id" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">reference_id</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="regulation" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">regulation</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="control_number" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">control_number</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="assets" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">assets</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="technology" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">technology</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="team" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">team</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="owner" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">owner</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="manager" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">manager</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="source" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">source</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="scoring_method" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">scoring_method</stringProp>
                                        <stringProp name="Argument.value">1</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="likelihood" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">likelihood</stringProp>
                                        <stringProp name="Argument.value">3</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="impact" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">impact</stringProp>
                                        <stringProp name="Argument.value">3</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="AccessVector" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">AccessVector</stringProp>
                                        <stringProp name="Argument.value">N</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="AccessComplexity" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">AccessComplexity</stringProp>
                                        <stringProp name="Argument.value">L</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="Authentication" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">Authentication</stringProp>
                                        <stringProp name="Argument.value">N</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="ConfImpact" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">ConfImpact</stringProp>
                                        <stringProp name="Argument.value">C</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="IntegImpact" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">IntegImpact</stringProp>
                                        <stringProp name="Argument.value">C</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="AvailImpact" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">AvailImpact</stringProp>
                                        <stringProp name="Argument.value">C</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="Exploitability" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">Exploitability</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="RemediationLevel" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">RemediationLevel</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="ReportConfidence" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">ReportConfidence</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="CollateralDamagePotential" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">CollateralDamagePotential</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="TargetDistribution" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">TargetDistribution</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="ConfidentialityRequirement" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">ConfidentialityRequirement</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="IntegrityRequirement" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">IntegrityRequirement</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="AvailabilityRequirement" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">AvailabilityRequirement</stringProp>
                                        <stringProp name="Argument.value">ND</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="DREADDamage" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">DREADDamage</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="DREADReproducibility" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">DREADReproducibility</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="DREADExploitability" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">DREADExploitability</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="DREADAffectedUsers" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">DREADAffectedUsers</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="DREADDiscoverability" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">DREADDiscoverability</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPSkillLevel" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPSkillLevel</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPMotive" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPMotive</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPOpportunity" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPOpportunity</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPSize" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPSize</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPEaseOfDiscovery" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPEaseOfDiscovery</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPEaseOfExploit" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPEaseOfExploit</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPAwareness" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPAwareness</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPIntrusionDetection" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPIntrusionDetection</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPLossOfConfidentiality" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPLossOfConfidentiality</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPLossOfIntegrity" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPLossOfIntegrity</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPLossOfAvailability" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPLossOfAvailability</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPLossOfAccountability" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPLossOfAccountability</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPFinancialDamage" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPFinancialDamage</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPReputationDamage" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPReputationDamage</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPNonCompliance" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPNonCompliance</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="OWASPPrivacyViolation" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">OWASPPrivacyViolation</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="Custom" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">Custom</stringProp>
                                        <stringProp name="Argument.value">10</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="assessment" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">assessment</stringProp>
                                        <stringProp name="Argument.value">Bad performance</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="notes" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">notes</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">/management/index.php</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/management/index.php
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="X-Requested-With" elementType="Header">
                                        <stringProp name="Header.name">X-Requested-With</stringProp>
                                        <stringProp name="Header.value">XMLHttpRequest</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:59.0) Gecko/20100101 Firefox/59.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">*/*</stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="146 Submit risk without attachmnet" enabled="false">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                    <elementProp name="id" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">id</stringProp>
                                        <stringProp name="Argument.value">%201003</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/api/management/risk/viewhtml</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/management/index.php
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="X-Requested-With" elementType="Header">
                                        <stringProp name="Header.name">X-Requested-With</stringProp>
                                        <stringProp name="Header.value">XMLHttpRequest</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:59.0) Gecko/20100101 Firefox/59.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">*/*</stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="Logout" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="153 Logout" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/logout.php</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/management/index.php
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:59.0) Gecko/20100101 Firefox/59.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="154 Logout" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/index.php</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/management/index.php
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:59.0) Gecko/20100101 Firefox/59.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor"
                                        testname="Debug PostProcessor" enabled="true">
                        <boolProp name="displayJMeterProperties">true</boolProp>
                        <boolProp name="displayJMeterVariables">true</boolProp>
                        <boolProp name="displaySamplerProperties">true</boolProp>
                        <boolProp name="displaySystemProperties">true</boolProp>
                    </DebugPostProcessor>
                    <hashTree/>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                       testname="Delete risk" enabled="true">
                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                    <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="1 Go To login page" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="1 Go To login page" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="3 Login" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3 Login"
                                          enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                    <elementProp name="user" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">user</stringProp>
                                        <stringProp name="Argument.value">admin</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="pass" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                                        <stringProp name="Argument.name">pass</stringProp>
                                        <stringProp name="Argument.value">^Y&amp;U8i9o0p</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="submit" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">submit</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">/</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4 Login"
                                          enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/reports</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5 Login"
                                          enabled="false">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/reports/</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample
                            </stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="10 Go to Risk Management page" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="10 Go to Risk Management page" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/management/index.php</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/reports/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor"
                                            testname="Regular Expression Extractor" enabled="true">
                                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                                <stringProp name="RegexExtractor.refname">csrf</stringProp>
                                <stringProp name="RegexExtractor.regex">csrf_magic&apos; value=&quot;(.*)&quot;
                                </stringProp>
                                <stringProp name="RegexExtractor.template">$1$</stringProp>
                                <stringProp name="RegexExtractor.default"></stringProp>
                                <stringProp name="RegexExtractor.match_number">1</stringProp>
                            </RegexExtractor>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="15 See risks" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="15 See risks" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/management/plan_mitigations.php</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/management/index.php
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor"
                                            testname="XPath Extractor" enabled="false">
                                <stringProp name="XPathExtractor.default"></stringProp>
                                <stringProp name="XPathExtractor.refname">riskid</stringProp>
                                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                                <stringProp name="XPathExtractor.xpathQuery">
                                    /html/body/div[2]/div/div[2]/div[2]/div/div/div/table/tbody/tr[1]/td[1]/a/text()
                                </stringProp>
                                <boolProp name="XPathExtractor.validate">false</boolProp>
                                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                                <boolProp name="XPathExtractor.namespace">false</boolProp>
                            </XPathExtractor>
                            <hashTree/>
                            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor"
                                           testname="CSS Selector Extractor" enabled="true">
                                <stringProp name="HtmlExtractor.refname">riskid2</stringProp>
                                <stringProp name="HtmlExtractor.expr">#tab-container &gt; div &gt; div &gt; table &gt;
                                    tbody &gt; tr:nth-child(2) &gt; td.open-risk &gt; a
                                </stringProp>
                                <stringProp name="HtmlExtractor.attribute"></stringProp>
                                <stringProp name="HtmlExtractor.default"></stringProp>
                                <boolProp name="HtmlExtractor.default_empty_value">true</boolProp>
                                <stringProp name="HtmlExtractor.match_number">1</stringProp>
                                <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
                            </HtmlExtractor>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="17 Select second risk" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="17 Select second risk" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                    <elementProp name="id" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">id</stringProp>
                                        <stringProp name="Argument.value">${riskid2}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/api/management/risk/viewhtml</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">
                                            http://simplerisk.local/management/plan_mitigations.php
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="X-Requested-With" elementType="Header">
                                        <stringProp name="Header.name">X-Requested-With</stringProp>
                                        <stringProp name="Header.value">XMLHttpRequest</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">*/*</stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="19 Opt to delete risk" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="19 Opt to delete risk" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                    <elementProp name="id" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">id</stringProp>
                                        <stringProp name="Argument.value">${riskid2}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/api/management/risk/closerisk</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">
                                            http://simplerisk.local/management/plan_mitigations.php
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="X-Requested-With" elementType="Header">
                                        <stringProp name="Header.name">X-Requested-With</stringProp>
                                        <stringProp name="Header.value">XMLHttpRequest</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">*/*</stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="21 Opt to close risk" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="21 Opt to close risk" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                    <elementProp name="__csrf_magic" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">__csrf_magic</stringProp>
                                        <stringProp name="Argument.value">${csrf}</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="close_reason" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">close_reason</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="note" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">note</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/api/management/risk/closerisk?id=${riskid2}
                            </stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">
                                            http://simplerisk.local/management/plan_mitigations.php
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="X-Requested-With" elementType="Header">
                                        <stringProp name="Header.name">X-Requested-With</stringProp>
                                        <stringProp name="Header.value">XMLHttpRequest</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">*/*</stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler"
                                  enabled="true">
                        <boolProp name="displayJMeterProperties">false</boolProp>
                        <boolProp name="displayJMeterVariables">true</boolProp>
                        <boolProp name="displaySystemProperties">false</boolProp>
                    </DebugSampler>
                    <hashTree/>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                       testname="Delete 20 risks" enabled="false">
                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                    <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="1 Go To login page" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="1 Go To login page" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="3 Login" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3 Login"
                                          enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                    <elementProp name="user" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">user</stringProp>
                                        <stringProp name="Argument.value">admin</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="pass" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                                        <stringProp name="Argument.name">pass</stringProp>
                                        <stringProp name="Argument.value">^Y&amp;U8i9o0p</stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                    <elementProp name="submit" elementType="HTTPArgument">
                                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                        <stringProp name="Argument.name">submit</stringProp>
                                        <stringProp name="Argument.value"></stringProp>
                                        <stringProp name="Argument.metadata">=</stringProp>
                                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                    </elementProp>
                                </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                            <stringProp name="HTTPSampler.path">/</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Content-Type" elementType="Header">
                                        <stringProp name="Header.name">Content-Type</stringProp>
                                        <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4 Login"
                                          enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/reports</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5 Login"
                                          enabled="false">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/reports/</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample
                            </stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                           testname="10 Go to Risk Management page" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                          testname="10 Go to Risk Management page" enabled="true">
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                         guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.protocol">http</stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/management/index.php</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                               testname="Response Assertion" enabled="true">
                                <collectionProp name="Asserion.test_strings"/>
                                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                <stringProp name="Assertion.custom_message"></stringProp>
                                <boolProp name="Assertion.assume_success">false</boolProp>
                                <intProp name="Assertion.test_type">2</intProp>
                            </ResponseAssertion>
                            <hashTree/>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                           testname="HTTP Header Manager" enabled="true">
                                <collectionProp name="HeaderManager.headers">
                                    <elementProp name="Referer" elementType="Header">
                                        <stringProp name="Header.name">Referer</stringProp>
                                        <stringProp name="Header.value">http://simplerisk.local/reports/</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Language" elementType="Header">
                                        <stringProp name="Header.name">Accept-Language</stringProp>
                                        <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                    </elementProp>
                                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                        <stringProp name="Header.value">1</stringProp>
                                    </elementProp>
                                    <elementProp name="Accept-Encoding" elementType="Header">
                                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                                        <stringProp name="Header.value">gzip, deflate</stringProp>
                                    </elementProp>
                                    <elementProp name="User-Agent" elementType="Header">
                                        <stringProp name="Header.name">User-Agent</stringProp>
                                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                            rv:63.0) Gecko/20100101 Firefox/63.0
                                        </stringProp>
                                    </elementProp>
                                    <elementProp name="Accept" elementType="Header">
                                        <stringProp name="Header.name">Accept</stringProp>
                                        <stringProp name="Header.value">
                                            text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        </stringProp>
                                    </elementProp>
                                </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor"
                                            testname="Regular Expression Extractor" enabled="true">
                                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                                <stringProp name="RegexExtractor.refname">csrf</stringProp>
                                <stringProp name="RegexExtractor.regex">csrf_magic&apos; value=&quot;(.*)&quot;
                                </stringProp>
                                <stringProp name="RegexExtractor.template">$1$</stringProp>
                                <stringProp name="RegexExtractor.default"></stringProp>
                                <stringProp name="RegexExtractor.match_number">1</stringProp>
                            </RegexExtractor>
                            <hashTree/>
                        </hashTree>
                    </hashTree>
                    <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller"
                                    enabled="true">
                        <boolProp name="LoopController.continue_forever">true</boolProp>
                        <stringProp name="LoopController.loops">20</stringProp>
                    </LoopController>
                    <hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                               testname="15 See risks" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                              testname="15 See risks" enabled="true">
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                             guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                    <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain"></stringProp>
                                <stringProp name="HTTPSampler.port"></stringProp>
                                <stringProp name="HTTPSampler.protocol">http</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                                <stringProp name="HTTPSampler.path">/management/plan_mitigations.php</stringProp>
                                <stringProp name="HTTPSampler.method">GET</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                                   testname="Response Assertion" enabled="true">
                                    <collectionProp name="Asserion.test_strings"/>
                                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                    <stringProp name="Assertion.custom_message"></stringProp>
                                    <boolProp name="Assertion.assume_success">false</boolProp>
                                    <intProp name="Assertion.test_type">2</intProp>
                                </ResponseAssertion>
                                <hashTree/>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                               testname="HTTP Header Manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Referer" elementType="Header">
                                            <stringProp name="Header.name">Referer</stringProp>
                                            <stringProp name="Header.value">
                                                http://simplerisk.local/management/index.php
                                            </stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Language" elementType="Header">
                                            <stringProp name="Header.name">Accept-Language</stringProp>
                                            <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                        </elementProp>
                                        <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                                            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                                            <stringProp name="Header.value">1</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate</stringProp>
                                        </elementProp>
                                        <elementProp name="User-Agent" elementType="Header">
                                            <stringProp name="Header.name">User-Agent</stringProp>
                                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                                rv:63.0) Gecko/20100101 Firefox/63.0
                                            </stringProp>
                                        </elementProp>
                                        <elementProp name="Accept" elementType="Header">
                                            <stringProp name="Header.name">Accept</stringProp>
                                            <stringProp name="Header.value">
                                                text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                            </stringProp>
                                        </elementProp>
                                    </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                                <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor"
                                                testname="XPath Extractor" enabled="false">
                                    <stringProp name="XPathExtractor.default"></stringProp>
                                    <stringProp name="XPathExtractor.refname">riskid</stringProp>
                                    <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                                    <stringProp name="XPathExtractor.xpathQuery">
                                        /html/body/div[2]/div/div[2]/div[2]/div/div/div/table/tbody/tr[1]/td[1]/a/text()
                                    </stringProp>
                                    <boolProp name="XPathExtractor.validate">false</boolProp>
                                    <boolProp name="XPathExtractor.tolerant">false</boolProp>
                                    <boolProp name="XPathExtractor.namespace">false</boolProp>
                                </XPathExtractor>
                                <hashTree/>
                                <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor"
                                               testname="CSS Selector Extractor" enabled="true">
                                    <stringProp name="HtmlExtractor.refname">riskid2</stringProp>
                                    <stringProp name="HtmlExtractor.expr">#tab-container &gt; div &gt; div &gt; table
                                        &gt; tbody &gt; tr:nth-child(2) &gt; td.open-risk &gt; a
                                    </stringProp>
                                    <stringProp name="HtmlExtractor.attribute"></stringProp>
                                    <stringProp name="HtmlExtractor.default"></stringProp>
                                    <boolProp name="HtmlExtractor.default_empty_value">true</boolProp>
                                    <stringProp name="HtmlExtractor.match_number">1</stringProp>
                                    <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
                                </HtmlExtractor>
                                <hashTree/>
                            </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                               testname="17 Select second risk" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                              testname="17 Select second risk" enabled="true">
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                             guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                    <collectionProp name="Arguments.arguments">
                                        <elementProp name="id" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.name">id</stringProp>
                                            <stringProp name="Argument.value">${riskid2}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                        </elementProp>
                                    </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain"></stringProp>
                                <stringProp name="HTTPSampler.port"></stringProp>
                                <stringProp name="HTTPSampler.protocol">http</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                                <stringProp name="HTTPSampler.path">/api/management/risk/viewhtml</stringProp>
                                <stringProp name="HTTPSampler.method">GET</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                                   testname="Response Assertion" enabled="true">
                                    <collectionProp name="Asserion.test_strings"/>
                                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                    <stringProp name="Assertion.custom_message"></stringProp>
                                    <boolProp name="Assertion.assume_success">false</boolProp>
                                    <intProp name="Assertion.test_type">2</intProp>
                                </ResponseAssertion>
                                <hashTree/>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                               testname="HTTP Header Manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Referer" elementType="Header">
                                            <stringProp name="Header.name">Referer</stringProp>
                                            <stringProp name="Header.value">
                                                http://simplerisk.local/management/plan_mitigations.php
                                            </stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Language" elementType="Header">
                                            <stringProp name="Header.name">Accept-Language</stringProp>
                                            <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                        </elementProp>
                                        <elementProp name="X-Requested-With" elementType="Header">
                                            <stringProp name="Header.name">X-Requested-With</stringProp>
                                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate</stringProp>
                                        </elementProp>
                                        <elementProp name="User-Agent" elementType="Header">
                                            <stringProp name="Header.name">User-Agent</stringProp>
                                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                                rv:63.0) Gecko/20100101 Firefox/63.0
                                            </stringProp>
                                        </elementProp>
                                        <elementProp name="Accept" elementType="Header">
                                            <stringProp name="Header.name">Accept</stringProp>
                                            <stringProp name="Header.value">*/*</stringProp>
                                        </elementProp>
                                    </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                            </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                               testname="19 Opt to delete risk" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                              testname="19 Opt to delete risk" enabled="true">
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                             guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                    <collectionProp name="Arguments.arguments">
                                        <elementProp name="id" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.name">id</stringProp>
                                            <stringProp name="Argument.value">${riskid2}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                        </elementProp>
                                    </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain"></stringProp>
                                <stringProp name="HTTPSampler.port"></stringProp>
                                <stringProp name="HTTPSampler.protocol">http</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                                <stringProp name="HTTPSampler.path">/api/management/risk/closerisk</stringProp>
                                <stringProp name="HTTPSampler.method">GET</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                                   testname="Response Assertion" enabled="true">
                                    <collectionProp name="Asserion.test_strings"/>
                                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                    <stringProp name="Assertion.custom_message"></stringProp>
                                    <boolProp name="Assertion.assume_success">false</boolProp>
                                    <intProp name="Assertion.test_type">2</intProp>
                                </ResponseAssertion>
                                <hashTree/>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                               testname="HTTP Header Manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Referer" elementType="Header">
                                            <stringProp name="Header.name">Referer</stringProp>
                                            <stringProp name="Header.value">
                                                http://simplerisk.local/management/plan_mitigations.php
                                            </stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Language" elementType="Header">
                                            <stringProp name="Header.name">Accept-Language</stringProp>
                                            <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                        </elementProp>
                                        <elementProp name="X-Requested-With" elementType="Header">
                                            <stringProp name="Header.name">X-Requested-With</stringProp>
                                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate</stringProp>
                                        </elementProp>
                                        <elementProp name="User-Agent" elementType="Header">
                                            <stringProp name="Header.name">User-Agent</stringProp>
                                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                                rv:63.0) Gecko/20100101 Firefox/63.0
                                            </stringProp>
                                        </elementProp>
                                        <elementProp name="Accept" elementType="Header">
                                            <stringProp name="Header.name">Accept</stringProp>
                                            <stringProp name="Header.value">*/*</stringProp>
                                        </elementProp>
                                    </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                            </hashTree>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                               testname="21 Opt to close risk" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                              testname="21 Opt to close risk" enabled="true">
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                             guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                    <collectionProp name="Arguments.arguments">
                                        <elementProp name="__csrf_magic" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.name">__csrf_magic</stringProp>
                                            <stringProp name="Argument.value">${csrf}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                        </elementProp>
                                        <elementProp name="close_reason" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.name">close_reason</stringProp>
                                            <stringProp name="Argument.value"></stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                        </elementProp>
                                        <elementProp name="note" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.name">note</stringProp>
                                            <stringProp name="Argument.value"></stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                        </elementProp>
                                    </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain"></stringProp>
                                <stringProp name="HTTPSampler.port"></stringProp>
                                <stringProp name="HTTPSampler.protocol">http</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                                <stringProp name="HTTPSampler.path">/api/management/risk/closerisk?id=${riskid2}
                                </stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                                   testname="Response Assertion" enabled="true">
                                    <collectionProp name="Asserion.test_strings"/>
                                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                    <stringProp name="Assertion.custom_message"></stringProp>
                                    <boolProp name="Assertion.assume_success">false</boolProp>
                                    <intProp name="Assertion.test_type">2</intProp>
                                </ResponseAssertion>
                                <hashTree/>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                               testname="HTTP Header Manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Referer" elementType="Header">
                                            <stringProp name="Header.name">Referer</stringProp>
                                            <stringProp name="Header.value">
                                                http://simplerisk.local/management/plan_mitigations.php
                                            </stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Language" elementType="Header">
                                            <stringProp name="Header.name">Accept-Language</stringProp>
                                            <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                        </elementProp>
                                        <elementProp name="X-Requested-With" elementType="Header">
                                            <stringProp name="Header.name">X-Requested-With</stringProp>
                                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate</stringProp>
                                        </elementProp>
                                        <elementProp name="User-Agent" elementType="Header">
                                            <stringProp name="Header.name">User-Agent</stringProp>
                                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                                rv:63.0) Gecko/20100101 Firefox/63.0
                                            </stringProp>
                                        </elementProp>
                                        <elementProp name="Accept" elementType="Header">
                                            <stringProp name="Header.name">Accept</stringProp>
                                            <stringProp name="Header.value">*/*</stringProp>
                                        </elementProp>
                                    </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                            </hashTree>
                        </hashTree>
                        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler"
                                      enabled="true">
                            <boolProp name="displayJMeterProperties">false</boolProp>
                            <boolProp name="displayJMeterVariables">true</boolProp>
                            <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugSampler>
                        <hashTree/>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController"
                                               testname="21 Opt to close risk" enabled="true">
                            <boolProp name="TransactionController.includeTimers">false</boolProp>
                            <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy"
                                              testname="21 Opt to close risk" enabled="true">
                                <elementProp name="HTTPsampler.Arguments" elementType="Arguments"
                                             guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                                    <collectionProp name="Arguments.arguments">
                                        <elementProp name="__csrf_magic" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.name">__csrf_magic</stringProp>
                                            <stringProp name="Argument.value">${csrf}</stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                        </elementProp>
                                        <elementProp name="close_reason" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.name">close_reason</stringProp>
                                            <stringProp name="Argument.value"></stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                        </elementProp>
                                        <elementProp name="note" elementType="HTTPArgument">
                                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                            <stringProp name="Argument.name">note</stringProp>
                                            <stringProp name="Argument.value"></stringProp>
                                            <stringProp name="Argument.metadata">=</stringProp>
                                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                                        </elementProp>
                                    </collectionProp>
                                </elementProp>
                                <stringProp name="HTTPSampler.domain"></stringProp>
                                <stringProp name="HTTPSampler.port"></stringProp>
                                <stringProp name="HTTPSampler.protocol">http</stringProp>
                                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                                <stringProp name="HTTPSampler.path">/api/management/risk/closerisk?id=${riskid2}
                                </stringProp>
                                <stringProp name="HTTPSampler.method">POST</stringProp>
                                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                                <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            </HTTPSamplerProxy>
                            <hashTree>
                                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion"
                                                   testname="Response Assertion" enabled="true">
                                    <collectionProp name="Asserion.test_strings"/>
                                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                                    <stringProp name="Assertion.custom_message"></stringProp>
                                    <boolProp name="Assertion.assume_success">false</boolProp>
                                    <intProp name="Assertion.test_type">2</intProp>
                                </ResponseAssertion>
                                <hashTree/>
                                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager"
                                               testname="HTTP Header Manager" enabled="true">
                                    <collectionProp name="HeaderManager.headers">
                                        <elementProp name="Referer" elementType="Header">
                                            <stringProp name="Header.name">Referer</stringProp>
                                            <stringProp name="Header.value">
                                                http://simplerisk.local/management/plan_mitigations.php
                                            </stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Language" elementType="Header">
                                            <stringProp name="Header.name">Accept-Language</stringProp>
                                            <stringProp name="Header.value">en-GB,en;q=0.5</stringProp>
                                        </elementProp>
                                        <elementProp name="X-Requested-With" elementType="Header">
                                            <stringProp name="Header.name">X-Requested-With</stringProp>
                                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                                        </elementProp>
                                        <elementProp name="Accept-Encoding" elementType="Header">
                                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                                            <stringProp name="Header.value">gzip, deflate</stringProp>
                                        </elementProp>
                                        <elementProp name="User-Agent" elementType="Header">
                                            <stringProp name="Header.name">User-Agent</stringProp>
                                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64;
                                                rv:63.0) Gecko/20100101 Firefox/63.0
                                            </stringProp>
                                        </elementProp>
                                        <elementProp name="Accept" elementType="Header">
                                            <stringProp name="Header.name">Accept</stringProp>
                                            <stringProp name="Header.value">*/*</stringProp>
                                        </elementProp>
                                    </collectionProp>
                                </HeaderManager>
                                <hashTree/>
                            </hashTree>
                        </hashTree>
                    </hashTree>
                </hashTree>
                <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController"
                                        testname="Test Fragment" enabled="false"/>
                <hashTree/>
            </hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector"
                             testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                        <time>true</time>
                        <latency>true</latency>
                        <timestamp>true</timestamp>
                        <success>true</success>
                        <label>true</label>
                        <code>true</code>
                        <message>true</message>
                        <threadName>true</threadName>
                        <dataType>true</dataType>
                        <encoding>false</encoding>
                        <assertions>true</assertions>
                        <subresults>true</subresults>
                        <responseData>false</responseData>
                        <samplerData>false</samplerData>
                        <xml>false</xml>
                        <fieldNames>true</fieldNames>
                        <responseHeaders>false</responseHeaders>
                        <requestHeaders>false</requestHeaders>
                        <responseDataOnError>false</responseDataOnError>
                        <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                        <assertionsResultsToSave>0</assertionsResultsToSave>
                        <bytes>true</bytes>
                        <sentBytes>true</sentBytes>
                        <url>true</url>
                        <threadCounts>true</threadCounts>
                        <idleTime>true</idleTime>
                        <connectTime>true</connectTime>
                    </value>
                </objProp>
                <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder"
                          enabled="false">
                <stringProp name="ProxyControlGui.port">8888</stringProp>
                <collectionProp name="ProxyControlGui.exclude_list">
                    <stringProp name="1179605444">
                        (?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)
                    </stringProp>
                    <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
                    <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
                    <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
                    <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
                    <stringProp name="-192420923">.*yimg\.com.*</stringProp>
                    <stringProp name="305776760">
                        (?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*
                    </stringProp>
                    <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
                    <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
                    <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
                    <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
                    <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
                    <stringProp name="1658855950">.*toolbar\.live\.com.*</stringProp>
                    <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
                    <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
                    <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
                    <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
                    <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
                    <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
                    <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
                    <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
                    <stringProp name="1193216536">update\.microsoft\.com.*</stringProp>
                    <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
                    <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
                    <stringProp name="587935979">g\.msn.*</stringProp>
                    <stringProp name="1629558731">clients.*\.google.*</stringProp>
                </collectionProp>
                <collectionProp name="ProxyControlGui.include_list">
                    <stringProp name="-1216552648">.*simplerisk\.local.*</stringProp>
                </collectionProp>
                <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
                <intProp name="ProxyControlGui.grouping_mode">4</intProp>
                <boolProp name="ProxyControlGui.add_assertion">true</boolProp>
                <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
                <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
                <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
                <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
                <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
                <boolProp name="ProxyControlGui.regex_match">true</boolProp>
                <stringProp name="ProxyControlGui.content_type_include"></stringProp>
                <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
                <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
                <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">Opt to close risk</stringProp>
                <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
                <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
                <stringProp name="ProxyControlGui.domains">simplerisk.local</stringProp>
            </ProxyControl>
            <hashTree>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector"
                                 testname="View Results Tree" enabled="true">
                    <boolProp name="ResultCollector.error_logging">false</boolProp>
                    <objProp>
                        <name>saveConfig</name>
                        <value class="SampleSaveConfiguration">
                            <time>true</time>
                            <latency>true</latency>
                            <timestamp>true</timestamp>
                            <success>true</success>
                            <label>true</label>
                            <code>true</code>
                            <message>true</message>
                            <threadName>true</threadName>
                            <dataType>true</dataType>
                            <encoding>true</encoding>
                            <assertions>true</assertions>
                            <subresults>true</subresults>
                            <responseData>true</responseData>
                            <samplerData>true</samplerData>
                            <xml>true</xml>
                            <fieldNames>false</fieldNames>
                            <responseHeaders>true</responseHeaders>
                            <requestHeaders>true</requestHeaders>
                            <responseDataOnError>true</responseDataOnError>
                            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                            <assertionsResultsToSave>0</assertionsResultsToSave>
                            <bytes>true</bytes>
                            <url>true</url>
                            <fileName>true</fileName>
                            <hostname>true</hostname>
                            <threadCounts>true</threadCounts>
                            <sampleCount>true</sampleCount>
                            <idleTime>true</idleTime>
                            <connectTime>true</connectTime>
                        </value>
                    </objProp>
                    <stringProp name="filename">recording.xml</stringProp>
                </ResultCollector>
                <hashTree/>
            </hashTree>
        </hashTree>
    </hashTree>
</jmeterTestPlan>
